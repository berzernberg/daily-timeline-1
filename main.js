/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var g=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var k=Object.prototype.hasOwnProperty;var Y=(l,a,t)=>a in l?g(l,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[a]=t;var S=(l,a)=>{for(var t in a)g(l,t,{get:a[t],enumerable:!0})},L=(l,a,t,e)=>{if(a&&typeof a=="object"||typeof a=="function")for(let i of M(a))!k.call(l,i)&&i!==t&&g(l,i,{get:()=>a[i],enumerable:!(e=F(a,i))||e.enumerable});return l};var I=l=>L(g({},"__esModule",{value:!0}),l);var m=(l,a,t)=>Y(l,typeof a!="symbol"?a+"":a,t);var P={};S(P,{default:()=>T});module.exports=I(P);var b=require("obsidian");var w=require("obsidian");var h="daily-notes-timeline",D=class extends w.ItemView{constructor(t,e){super(t);m(this,"plugin");m(this,"contentEl");m(this,"startDate");m(this,"endDate");this.plugin=e;let i=new Date;this.startDate=new Date(i.getFullYear(),i.getMonth(),1),this.endDate=new Date(i.getFullYear(),i.getMonth()+1,0)}getViewType(){return h}getDisplayText(){return"Daily Notes Timeline"}getIcon(){return"calendar-clock"}async onOpen(){let t=this.containerEl.children[1];t.empty(),t.addClass("timeline-view-container"),this.contentEl=t.createDiv({cls:"timeline-content"}),this.renderControls(),await this.renderTimeline()}async onClose(){this.contentEl.empty()}renderControls(){let t=this.contentEl.createDiv({cls:"timeline-controls"}),e=t.createEl("select",{cls:"dropdown"}),i=new Date().getFullYear();for(let s=i-1;s<=i+1;s++)for(let o=0;o<12;o++){let d=new Date(s,o,1),u=e.createEl("option");u.value=`${s}-${o}`,u.text=d.toLocaleDateString("en-US",{year:"numeric",month:"long"}),s===this.startDate.getFullYear()&&o===this.startDate.getMonth()&&(u.selected=!0)}e.addEventListener("change",async()=>{let[s,o]=e.value.split("-").map(Number);this.startDate=new Date(s,o,1),this.endDate=new Date(s,o+1,0),await this.renderTimeline()}),t.createEl("button",{text:"\u2190 Previous",cls:"mod-cta"}).addEventListener("click",async()=>{this.startDate=new Date(this.startDate.getFullYear(),this.startDate.getMonth()-1,1),this.endDate=new Date(this.endDate.getFullYear(),this.endDate.getMonth(),0),await this.updateMonthSelect(e),await this.renderTimeline()}),t.createEl("button",{text:"Next \u2192",cls:"mod-cta"}).addEventListener("click",async()=>{this.startDate=new Date(this.startDate.getFullYear(),this.startDate.getMonth()+1,1),this.endDate=new Date(this.endDate.getFullYear(),this.endDate.getMonth()+2,0),await this.updateMonthSelect(e),await this.renderTimeline()}),t.createEl("button",{text:"Today",cls:"mod-cta"}).addEventListener("click",async()=>{let s=new Date;this.startDate=new Date(s.getFullYear(),s.getMonth(),1),this.endDate=new Date(s.getFullYear(),s.getMonth()+1,0),await this.updateMonthSelect(e),await this.renderTimeline()})}async updateMonthSelect(t){t.value=`${this.startDate.getFullYear()}-${this.startDate.getMonth()}`}async renderTimeline(){let t=this.contentEl.querySelector(".timeline-scroll");t&&t.remove();let e=this.contentEl.createDiv({cls:"timeline-scroll"}),i=await this.plugin.parser.parseDailyNotes(this.plugin.settings.dailyNotesFolder,this.plugin.settings.dateFormat,this.startDate,this.endDate);if(i.length===0){e.createDiv({cls:"timeline-empty",text:"No tasks found in the selected date range"});return}for(let n of i)this.renderDayTimeline(e,n)}renderDayTimeline(t,e){let i=t.createDiv({cls:"timeline-day"}),n=i.createDiv({cls:"timeline-date-header"}),c=new Date(e.date);n.setText(c.toLocaleDateString("en-US",{weekday:"short",year:"numeric",month:"short",day:"numeric"}));let r=i.createDiv({cls:"timeline-track"});r.createDiv({cls:"timeline-time-label timeline-time-start"}).setText("00:00"),r.createDiv({cls:"timeline-time-label timeline-time-end"}).setText("23:59");for(let d of e.tasks)this.renderTask(r,d)}renderTask(t,e){let n=(e.hour*60+e.minute)/1440*100,c=t.createDiv({cls:"timeline-task-dot"});c.style.left=`${n}%`,c.setAttribute("data-status",e.status),c.createDiv({cls:"timeline-task-label"}).setText(e.time);let s=c.createDiv({cls:"timeline-tooltip"}),o=s.createDiv({cls:"timeline-tooltip-content"});if(o.createDiv({cls:"timeline-tooltip-task"}).setText(`[${e.status}] ${e.content}`),e.subItems.length>0){let u=o.createEl("ul",{cls:"timeline-tooltip-subitems"});for(let f of e.subItems)u.createEl("li").setText(f)}c.addEventListener("mouseenter",()=>{s.addClass("is-visible")}),c.addEventListener("mouseleave",()=>{s.removeClass("is-visible")})}};var p=require("obsidian");var y=class extends p.PluginSettingTab{constructor(t,e){super(t,e);m(this,"plugin");this.plugin=e}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"Daily Notes Timeline Settings"}),new p.Setting(t).setName("Daily Notes Folder").setDesc("Path to your daily notes folder (leave empty for vault root or default daily notes location)").addText(e=>e.setPlaceholder("Daily Notes").setValue(this.plugin.settings.dailyNotesFolder).onChange(async i=>{this.plugin.settings.dailyNotesFolder=i,await this.plugin.saveSettings()})),new p.Setting(t).setName("Date Format").setDesc("Format used in daily note filenames (e.g., YYYY-MM-DD)").addText(e=>e.setPlaceholder("YYYY-MM-DD").setValue(this.plugin.settings.dateFormat).onChange(async i=>{this.plugin.settings.dateFormat=i,await this.plugin.saveSettings()})),new p.Setting(t).setName("Default Timeline Range").setDesc("Number of months to display by default").addSlider(e=>e.setLimits(1,12,1).setValue(this.plugin.settings.defaultRangeMonths).setDynamicTooltip().onChange(async i=>{this.plugin.settings.defaultRangeMonths=i,await this.plugin.saveSettings()}))}};var v=class{constructor(a){m(this,"vault");this.vault=a}async parseDailyNotes(a,t,e,i){let n=[],c=this.vault.getMarkdownFiles();for(let r of c)if(this.isInDailyNotesFolder(r.path,a)){let s=this.extractDateFromFilename(r.name,t);if(s){let o=this.parseDate(s);if(o&&o>=e&&o<=i){let d=await this.extractTasks(r);d.length>0&&n.push({date:s,path:r.path,tasks:d})}}}return n.sort((r,s)=>r.date.localeCompare(s.date))}isInDailyNotesFolder(a,t){return t?a.startsWith(t):!0}extractDateFromFilename(a,t){let e=a.replace(/\.md$/,"");if(t==="YYYY-MM-DD"){let i=e.match(/(\d{4}-\d{2}-\d{2})/);return i?i[1]:null}return e}parseDate(a){try{let[t,e,i]=a.split("-").map(Number);return new Date(t,e-1,i)}catch(t){return null}}async extractTasks(a){let e=(await this.vault.cachedRead(a)).split(`
`),i=[],n=null,c=/^- \[([^\]]+)\]\s+\*(\d{2}:\d{2})\*\s+(.+)$/;for(let r=0;r<e.length;r++){let s=e[r],o=s.match(c);if(o){n&&i.push(n);let[,d,u,f]=o,[x,E]=u.split(":").map(Number);n={status:d,time:u,content:f.trim(),subItems:[],date:this.extractDateFromFilename(a.name,"YYYY-MM-DD")||"",hour:x,minute:E}}else n&&s.trim().startsWith("-")&&s.includes("	")?n.subItems.push(s.trim().substring(1).trim()):n&&!s.trim().startsWith("-")&&s.trim()!==""&&n&&(i.push(n),n=null)}return n&&i.push(n),i}};var N={dailyNotesFolder:"",dateFormat:"YYYY-MM-DD",defaultRangeMonths:1};var T=class extends b.Plugin{constructor(){super(...arguments);m(this,"settings");m(this,"parser")}async onload(){await this.loadSettings(),this.parser=new v(this.app.vault),this.registerView(h,t=>new D(t,this)),this.addRibbonIcon("calendar-clock","Open Daily Notes Timeline",()=>{this.activateView()}),this.addCommand({id:"open-timeline-view",name:"Open Daily Notes Timeline",callback:()=>{this.activateView()}}),this.addSettingTab(new y(this.app,this))}async activateView(){let{workspace:t}=this.app,e=t.getLeavesOfType(h)[0];e||(e=t.getLeaf(!0),await e.setViewState({type:h,active:!0})),t.revealLeaf(e)}async loadSettings(){this.settings=Object.assign({},N,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}onunload(){this.app.workspace.detachLeavesOfType(h)}};
